@page "/edit/{id:int}"
@using QLS.Application.Interfaces
@using QLS.Domain.Entities
@inject IBookRepository BookRepository
@inject NavigationManager NavigationManager

<PageTitle>Home</PageTitle>

@if (Book is not null)
{
  <div class="row justify-content-center">
    <div class="col-6">
      <EditForm Enhance="true"
                method="post"
                FormName="EditBookForm"
                OnValidSubmit="EditBook"
                Model="Book"
                autocomplete="off">
        <h3>
          Sửa Thông Tin Sách @Id
        </h3>
        <input 
          type="hidden" 
          name="Book.Id"
          value="@Book.Id"
          />
        <div class="mb-3">
          <label for="title" class="form-label">
            Tiêu đề cuốn sách
          </label>
          <InputText id="title"
                     @bind-Value="Book.Title"
                     class="form-control shadow-none">
          </InputText>
        </div>

        <div class="mb-3">
          <label for="author" class="form-label">
            Tác giả
          </label>
          <InputText id="author"
                     @bind-Value="Book.Author"
                     class="form-control shadow-none">
          </InputText>
        </div>

        <div class="mb-3">
          <label for="publish-date" class="form-label">
            Ngày xuất bản
          </label>
          <InputDate id="publish-date"
                     @bind-Value="Book.PublishDate"
                     class="form-control shadow-none">
          </InputDate>
        </div>

        @* category *@
        <div class="mb-3">
          <label for="category" class="form-label">
            Danh mục sách
          </label>
          <InputSelect id="category"
                       @bind-Value="Book.Category"
                       class="form-control shadow-none">
            @foreach (var category in Enum.GetValues(typeof(Category)))
            {
              <option value="@category">
                @category.ToString()
              </option>
            }
          </InputSelect>

        </div>
        <div class="mb-3">
          <button class="btn btn-primary">
            Thêm
          </button>
          <a href="/read" class="btn btn-success" data-enhance="false">
            Danh sách các cuốn sách
          </a>
          @* tạo thông báo *@
          <DataAnnotationsValidator></DataAnnotationsValidator>
          <ValidationSummary></ValidationSummary>
        </div>

      </EditForm>

    </div>
  </div>
}


<h3>Edit</h3>

@code {
  [Parameter]
  public int Id { get; set; }

  [SupplyParameterFromForm]
  public Book? Book { get; set; }

  protected override async Task OnInitializedAsync()
  {
    Book ??= await BookRepository.GetByIdAsync(Id);
  }

  private async Task EditBook()
  {
    if (Book is not null)
    {
      await BookRepository.UpdateAsync(Book);
    }

    // trở lại trang home
    NavigationManager.NavigateTo("/read");
  }

}
